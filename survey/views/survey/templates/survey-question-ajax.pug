form(action="/main-action", method="POST", isLastSection=false, isAnswered=isAnswered, predictionLevel=question.predictionLevel appId=question.id indexQuestion=indexQuestion descLength=question.descLength style="padding: 0 15px") 
  input(type="hidden" name="questions[" + question.id + "][time]" value=isAnswered && userAnswer.time || 0 class="count-time")
  input(type="hidden" class="our-prediction" name="questions[" + question.id + "][ourPrediction]" value=ourPrediction)
  input(type="hidden" name="answer-installation" value=isAnswered && !userAnswer.agreePredict == 0 && userAnswer.install)
  input(type='hidden' class="final-question-in-form question-satisfaction" name="questions[" + question.id + "][satisfaction]" value=isAnswered &&userAnswer.satisfaction)
  //- input(type='hidden' class="final-question-in-form question-comment" name="questions[" + question.id + "][comment]" value=isAnswered &&userAnswer.comment)

  button(type="submit" style="display='none';")
  if(indexQuestion <= 10) 
    h5.text-center(style="text-transform: capitalize;") 
      span.pagingInfo 
        //- | Training phase: 
        <span style="color: #FF9800; font-size: 30px">#{indexQuestion}</span> / 10
  //- else if(indexQuestion > 10) 
  //-   h5.text-center(style="text-transform: capitalize;") 
  //-       span.pagingInfo Test phase: 
  //-         <span style="color: #FF9800; font-size: 30px">#{indexQuestion - 10}</span> / 16
    
  if(indexQuestion > 10 && indexQuestion <= 14) 
    h3.text-center(style="text-transform: capitalize;") The first prediction system
  else if(indexQuestion > 14 && indexQuestion <= 18) 
    h3.text-center(style="text-transform: capitalize;") The second prediction system
  else if(indexQuestion > 18 && indexQuestion <= 22) 
    h3.text-center(style="text-transform: capitalize;") The third prediction system
  else if(indexQuestion > 22 && indexQuestion <= 26) 
    h3.text-center(style="text-transform: capitalize;") The fourth prediction system
  // app name
  h3.title.text-center(style="text-transform: capitalize;")
    | #{indexQuestion + ". " +question.appName}
  div.text-center.mt-1
    | #{question.developer}
  div.text-center
    | #{question.categoryName}
  div.section
    span.font-weight-bold I. The app description, as given in the app market, is the following: <br>
    | !{question.description}
  // category
  //- .category.text-center.mt-2
  //-   span.category-label
  //-     | Category
  //-   | : #{question.categoryName}
  .step.wizard-step.current.mt-3(style='')
    //- // Description
    //- .description.mt-3
    //-   span.description-lavel.font-weight-bold
    //-     | I â€“ Description:
    //-   div
    //-     | !{question.description}


    // Collection Personal Data
    section(style= isAnswered ? "" : "display: none").section
      .section1.mt-3
        // label
        .section1-label 
          span.font-weight-bold 
            | II. Based on app source code analysis, this app might collect data of #{question.personalDataTypes.length} different data types, namely: &nbsp
          each personalDataType, index in question.personalDataTypes
            | #{personalDataType.name}
            if(index != question.personalDataTypes.length - 1)
              | #{", "}
            else 
              | #{"."}
        // node data
        .wrap-node
          ul 
            each personalDataType in question.personalDataTypes
              li
                span 
                  b #{personalDataType.name}: 
                  | #{personalDataType.mean}
                div 
                  span.font-weight-bold * Exploited APIs: 
                  each api, index in personalDataType.originalApis
                    | #{api.name}
                    if(index != personalDataType.originalApis.length - 1)
                      | #{", "}
                    else 
                      | #{"."}

                each api in personalDataType.apis
                  div.mt-2 - #{api.groupName}: 
                    div.pl-3  + #{api.mean}

                if(personalDataType.staticApis.length)
                  div 
                    span.font-weight-bold * Local executing: 
                    each api, index1 in personalDataType.staticApis
                      if(api.constants.length)
                        | #{api.name}
                        if(index1 != personalDataType.staticApis.length - 1)
                          | #{", "}
                        else 
                          | #{"."}

                    each api, index1 in personalDataType.staticApis
                      if(api.constants.length)
                        div
                          span.mt-2 - #{api.name}: 
                          each constant, index2 in api.constants
                            | #{constant}
                            if(index2 != api.constants.length - 1)
                              | #{", "}
                            else 
                              | #{"."}

                if(personalDataType.dynamicApis.length)
                  div 
                    span.font-weight-bold * Transferring the collected data: 
                    each api, index1 in personalDataType.dynamicApis
                      if(api.constants.length)
                        | #{api.name}
                        if(index1 != personalDataType.dynamicApis.length - 1)
                          | #{", "}
                        else 
                          | #{"."}

                    each api, index1 in personalDataType.dynamicApis
                      if(api.constants.length)
                        div
                          span.mt-2 - #{api.name}: 
                          each constant, index2 in api.constants
                            | #{constant}
                            if(index2 != api.constants.length - 1)
                              | #{", "}
                            else 
                              | #{"."}

    //- section(style= isAnswered ? "" : "display: none").section
      //- // Collection Personal Data
      //- .section2.mt-3
      //-   // label
      //-   .section2-label.font-weight-bold
      //-     | 3. As declared in the app's privacy policy,  the purpose for data collection are the following:
      //-   // node data
      //-   .wrap-node
      //-     if(question.collectionData.length > 0)
      //-       ul 
      //-         each category in question.collectionData
      //-           if(category.type && category.type == "all") 
      //-             li #{category.name}: &nbsp
      //-               each sub1, indexSub1 in category.children
      //-                 each meaning, indexMeaning in sub1.meanings
      //-                   span.capitalizeFirst(style="list-style-type: square;") #{meaning.groupKeyword}
      //-                   if(indexMeaning != sub1.meanings.length - 1)
      //-                     | #{", "} 
      //-                   else 
      //-                     | #{""}
      //-                 if(indexSub1 != category.children.length - 1)
      //-                   | #{", "} 
      //-                 else 
      //-                   | #{"."}
      //-           else 
      //-             //- li #{category.name}
      //-             each sub1 in category.children
      //-               li #{sub1.name}
      //-                 if(sub1.meanings && sub1.meanings.length > 0)
      //-                   ul
      //-                     li.capitalizeFirst(style="list-style-type: circle;") Collected data: 
      //-                       each meaning in sub1.meanings
      //-                         div - #{meaning.groupKeyword}: 
      //-                           each meaningText, indexMeaning in meaning.meanings
      //-                             | #{meaningText}
      //-                             if(indexMeaning != meaning.meanings.length - 1)
      //-                               | #{", "} 
      //-                             else 
      //-                               | #{"."}
      //-     else 
      //-       | &nbsp Not collect any personal data

      
          //-   ul.more
          //-     each sub1 in category.children
          //-       li(style="list-style-type: circle;") #{sub1.name}: 
          //-         ul.more
          //-           if(sub1.children && sub1.children.length > 0)
          //-             each sub2 in sub1.children
          //-               li(style="list-style-type: square;") #{sub2.name}: 
          //-           if((!sub1.children || sub1.children.length == 0) && sub1.contents.length) 
          //-             each content in sub1.contents
          //-               li.capitalizeFirst(style="list-style-type: square;") #{content.trim()}
          //-         div.see-more-btn() Read more
          //-     if(category.children.length == 0 && category.contents.length > 0) 
          //-       each content in category.contents
          //-         li.capitalizeFirst(style="list-style-type: circle;") #{content.trim()}
          //-   div.see-more-btn() Read more

      // Third party Data
      //- .section2.mt-3
      //-   // label
      //-   .section2-label.font-weight-bold
      //-     | 4. As declared in the app's privacy policy, the third party service  could receive the collected data for the following purpose(s):
      //-   // node data
      //-   .wrap-node
      //-     if(question.thirdPartyData.length > 0)
      //-       ul 
      //-         each category in question.thirdPartyData
      //-           if(category.type && category.type == "all") 
      //-             li #{category.name}: &nbsp
      //-               each sub1, indexSub1 in category.children
      //-                 each meaning, indexMeaning in sub1.meanings
      //-                   span.capitalizeFirst(style="list-style-type: square;") #{meaning.groupKeyword}
      //-                   if(indexMeaning != sub1.meanings.length - 1)
      //-                     | #{", "} 
      //-                   else 
      //-                     | #{""}
      //-                 if(indexSub1 != category.children.length - 1)
      //-                   | #{", "} 
      //-                 else 
      //-                   | #{"."}
      //-           else 
      //-             //- li #{category.name}
      //-             each sub1 in category.children
      //-               li #{sub1.name}
      //-                 if(sub1.meanings && sub1.meanings.length > 0)
      //-                   ul
      //-                     li.capitalizeFirst(style="list-style-type: circle;") Collected data: 
      //-                       each meaning in sub1.meanings
      //-                         div - #{meaning.groupKeyword}: 
      //-                           each meaningText, indexMeaning in meaning.meanings
      //-                             | #{meaningText}
      //-                             if(indexMeaning != meaning.meanings.length - 1)
      //-                               | #{", "} 
      //-                             else 
      //-                               | #{"."}

                          //- // type is all
                          //- if(sub1.meanings[0].type && sub1.meanings[0].type == "all") 
                          //-   each meaning in sub1.meanings
                          //-       span.capitalizeFirst(style="list-style-type: square;") #{meaning.groupKeyword}
                          //- else 
                                
          else      
            | &nbsp Not share data to any third parties
          //-   ul.more
          //-     each sub1 in category.children
          //-       li(style="list-style-type: circle;") #{sub1.name}: 
          //-         ul.more
          //-           if(sub1.children && sub1.children.length > 0)
          //-             each sub2 in sub1.children
          //-               li(style="list-style-type: square;") #{sub2.name}: 
          //-           if((!sub1.children || sub1.children.length == 0) && sub1.contents.length) 
          //-             each content in sub1.contents
          //-               li.capitalizeFirst(style="list-style-type: square;") #{content.trim()}
          //-         div.see-more-btn() Read more
          //-     if(category.children.length == 0 && category.contents.length > 0) 
          //-       each content in category.contents
          //-         li.capitalizeFirst(style="list-style-type: circle;") #{content.trim()}      
          //-   div.see-more-btn() Read more

      //- // Retention Data
      //- if(question.retentionData.length)
      //-   .section2.mt-3
      //-     // label
      //-     .section2-label.font-weight-bold
      //-       | Retention:
      //-     // node data
      //-     .wrap-node
      //-       ul 
      //-         each category in question.retentionData
                  
      //-           li #{category.name}: 
      //-             ul.more
      //-               each sub1 in category.children
      //-                 li(style="list-style-type: circle;") #{sub1.isShowKey ? sub1.name : sub1.name + ":"} 

      //-                   if(!sub1.isShowKey && sub1.contents.length) 
      //-                     ul.more
      //-                       each content in sub1.contents
      //-                         li.capitalizeFirst #{content.trim()}
      //-                     div.see-more-btn() Read more
      //-               if(category.children.length == 0 && category.contents.length > 0) 
      //-                 each content in category.contents
      //-                   li.capitalizeFirst(style="list-style-type: circle;") #{content.trim()}
      //-             div.see-more-btn() Read more

  
    // comments
    .comments-data-judgement.mt-3.section(style= isAnswered ? "" : "display: none")
      .final-judgement
        // label
        .comments-data-label.font-weight-bold.text-underline
          | III - Final judgment
        // final question
        .question-1.mt-2
          .title 1) Based on the fact that it could collect the all mentioned data above, do you think this app could be risky for your personal data?
          // anwsers
          .anwsers.mt-2
            label.container-radio
              | Very low
              input(type='radio' class="final-question" name="questions[" + question.id + "][final]" value="1" required checked=isAnswered && userAnswer.final == 1)
              span.checkmark

            label.container-radio
              | Low
              input(type='radio' class="final-question" name="questions[" + question.id + "][final]" value="2" checked=isAnswered && userAnswer.final == 2)
              span.checkmark

            label.container-radio
              | Neutral
              input(type='radio' class="final-question" name="questions[" + question.id + "][final]" value="3" checked=isAnswered && userAnswer.final == 3)
              span.checkmark

            label.container-radio
              | High
              input(type='radio' class="final-question" name="questions[" + question.id + "][final]" value="4" checked=isAnswered && userAnswer.final == 4)
              span.checkmark
            
            label.container-radio
              | Very High
              input(type='radio' class="final-question" name="questions[" + question.id + "][final]" value="5" checked=isAnswered && userAnswer.final == 5)
              span.checkmark

        // comments
        
        div(class="mt-3 wrap-comment-final", style=isAnswered && "display: block!important")
          // label
          .comments-data-label.font-weight-bold.text-underline
            | IV - Participants comments
            // question 
          .comment-final.mt-3.comments-data
            .title 1) 
              | Can you please to give me the reason why you think the risk level of  &nbsp
              b(style="text-transform: capitalize;") #{question.appName} &nbsp
              | is 
              b.awnser-filnal
              | &nbsp ?
            textarea(name="questions[" + question.id + "][comment]", cols="30", rows="5" required)
              | #{userAnswer.comment || ""}
    if(!isAnswered)
      div.see-next-btn() Next

